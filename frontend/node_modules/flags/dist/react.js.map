{"version":3,"sources":["../src/react/index.tsx"],"sourcesContent":["import React from 'react';\nimport type { FlagDefinitionsType, FlagValuesType } from '../types';\nimport { safeJsonStringify } from '../lib/safe-json-stringify';\n// the generic type T is not actually used but is great to\n// signal what is encrypted\ntype Encrypted<T> = string;\n\n/**\n * Registers variant definitions with the toolbar\n */\nexport function FlagDefinitions({\n  definitions,\n}: {\n  definitions: FlagDefinitionsType | Encrypted<FlagDefinitionsType>;\n}) {\n  return (\n    <script\n      type=\"application/json\"\n      data-flag-definitions\n      dangerouslySetInnerHTML={{\n        __html: safeJsonStringify(definitions),\n      }}\n    />\n  );\n}\n\n/**\n * Registers variant values with the toolbar\n */\nexport function FlagValues({\n  values,\n}: {\n  values: FlagValuesType | Encrypted<FlagValuesType>;\n}) {\n  return (\n    <script\n      type=\"application/json\"\n      data-flag-values\n      dangerouslySetInnerHTML={{\n        __html: safeJsonStringify(values),\n      }}\n    />\n  );\n}\n"],"mappings":";;;;;AAAA,OAAO,WAAW;AAUX,SAAS,gBAAgB;AAAA,EAC9B;AACF,GAEG;AACD,SACE;AAAA,IAAC;AAAA;AAAA,MACC,MAAK;AAAA,MACL,yBAAqB;AAAA,MACrB,yBAAyB;AAAA,QACvB,QAAQ,kBAAkB,WAAW;AAAA,MACvC;AAAA;AAAA,EACF;AAEJ;AAKO,SAAS,WAAW;AAAA,EACzB;AACF,GAEG;AACD,SACE;AAAA,IAAC;AAAA;AAAA,MACC,MAAK;AAAA,MACL,oBAAgB;AAAA,MAChB,yBAAyB;AAAA,QACvB,QAAQ,kBAAkB,MAAM;AAAA,MAClC;AAAA;AAAA,EACF;AAEJ;","names":[]}